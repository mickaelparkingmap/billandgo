imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BillAndGoBundle/Resources/config/services.yml" }
    - { resource: "@BillAndGoApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: ~
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'bootstrap_3_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        server_version: 5.7
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.project_dir%/var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        mapping_types:
            enum: string
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    #auth_mode: "%mailer_auth_mode%"
    #port: "%mailer_port%"
    spool: { type: memory }
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    use_username_form_type: false
    user_class: BillAndGoBundle\Entity\User
    service:
            mailer: fos_user.mailer.twig_swift
    from_email:
            address:        billandgo@iumio.com
            sender_name:    Bill&Go Service
    registration:
            confirmation:
                enabled: false
                template:   BillAndGoBundle:Registration:email.html.twig
                from_email:
                        address:        noreply@billandgo.fr
                        sender_name:    Bill&Go Service
            form:
                type: BillAndGoBundle\Form\RegistrationType
    resetting:
                email:
                    from_email: # Use this node only if you don't want the global email address for the resetting email
                        address:        noreply@billandgo.fr
                        sender_name:    Bill&Go Service
                    template:   BillAndGoBundle:Resetting:email.html.twig
                form:
                    type: BillAndGoBundle\Form\ResettingType
    profile:
            form:
                type: BillAndGoBundle\Form\ProfileType

              #  form:
               #     type: BillAndGoBundle\Form\RegistrationType

fos_rest:
    routing_loader:
        default_format: json                            # All responses should be JSON formated
        include_format: false                           # We do not include format in request, so that all responses
                                                        # will eventually be JSON formated

fos_oauth_server:
    db_driver:           orm
    client_class:        BillAndGo\ApiBundle\Entity\Oauth_client
    access_token_class:  BillAndGo\ApiBundle\Entity\AccessToken
    refresh_token_class: BillAndGo\ApiBundle\Entity\RefreshToken
    auth_code_class:     BillAndGo\ApiBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username             # This property will be used when valid credentials are given to load the user upon access token creation


hwi_oauth:
    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    connect:
        account_connector: app.fos_user.oauth_provider
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            github: github_id
            gitlab: gitlab_id
    firewall_names: ["main"]
    resource_owners:
        github:
            type:                github
            client_id:           2be8f4a70380a8497b8b
            client_secret:       eeb3ee6780a7dab892ec5f24c643094f1da91120
            scope:               'user,user:email,read:user,repo,gist''
            options:
                csrf: true